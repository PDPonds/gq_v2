//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Scripts/Player/InputController.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputController: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputController()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputController"",
    ""maps"": [
        {
            ""name"": ""PlayerAction"",
            ""id"": ""48e6e025-4b27-4304-8ac0-26ad9c5c1034"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""353a115e-d124-420f-8897-b4ab486b29a1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""c7d3b778-5064-4bef-bec4-8644db20ac69"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill_1"",
                    ""type"": ""Button"",
                    ""id"": ""1ab9ab07-6b6e-406c-8560-b4c689e65a7d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill_2"",
                    ""type"": ""Button"",
                    ""id"": ""3f38ff67-1871-4c9a-a649-77b5ceda5639"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill_3"",
                    ""type"": ""Button"",
                    ""id"": ""76b0849d-6753-45ea-9a0b-e26037297026"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill_4"",
                    ""type"": ""Button"",
                    ""id"": ""02bc6972-df1b-45da-bfe3-1345e66afc82"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill_5"",
                    ""type"": ""Button"",
                    ""id"": ""28f0c9a5-6a5f-4684-a8c0-4fbf3f9bc680"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""4f7c2f1c-a3e8-47c5-9d52-54e1c72ab4a7"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""efe4a039-af00-4715-b6fa-182fd530dfd0"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""df640867-1e77-4328-a1f0-d497f595d285"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b8ec0684-1998-4a93-aefd-4ac8f585f670"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""6c49876f-4e5f-4767-a394-81e7abdfbc73"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0b7fa26c-95d2-4afb-bf27-9cd004eca4b2"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f635f968-c6ac-4437-a9e3-656ce7eb53b7"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5784e04e-de64-4fdd-9713-1d3389c42837"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cedf6f8f-7811-4aea-8a19-f994d6004992"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ebdfcd2b-afb4-4361-9058-90c3680c3d3c"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill_3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad311bbc-adc3-43a7-8c53-b61626b1fba0"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill_4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""531ec9ad-2b46-4ed5-9ae0-e95ae4e51bfa"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e7a41d97-d6bc-40ee-8c9d-7de5997417b1"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill_5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerAction
        m_PlayerAction = asset.FindActionMap("PlayerAction", throwIfNotFound: true);
        m_PlayerAction_Move = m_PlayerAction.FindAction("Move", throwIfNotFound: true);
        m_PlayerAction_Dash = m_PlayerAction.FindAction("Dash", throwIfNotFound: true);
        m_PlayerAction_Skill_1 = m_PlayerAction.FindAction("Skill_1", throwIfNotFound: true);
        m_PlayerAction_Skill_2 = m_PlayerAction.FindAction("Skill_2", throwIfNotFound: true);
        m_PlayerAction_Skill_3 = m_PlayerAction.FindAction("Skill_3", throwIfNotFound: true);
        m_PlayerAction_Skill_4 = m_PlayerAction.FindAction("Skill_4", throwIfNotFound: true);
        m_PlayerAction_Skill_5 = m_PlayerAction.FindAction("Skill_5", throwIfNotFound: true);
        m_PlayerAction_MousePosition = m_PlayerAction.FindAction("MousePosition", throwIfNotFound: true);
    }

    ~@InputController()
    {
        UnityEngine.Debug.Assert(!m_PlayerAction.enabled, "This will cause a leak and performance issues, InputController.PlayerAction.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerAction
    private readonly InputActionMap m_PlayerAction;
    private List<IPlayerActionActions> m_PlayerActionActionsCallbackInterfaces = new List<IPlayerActionActions>();
    private readonly InputAction m_PlayerAction_Move;
    private readonly InputAction m_PlayerAction_Dash;
    private readonly InputAction m_PlayerAction_Skill_1;
    private readonly InputAction m_PlayerAction_Skill_2;
    private readonly InputAction m_PlayerAction_Skill_3;
    private readonly InputAction m_PlayerAction_Skill_4;
    private readonly InputAction m_PlayerAction_Skill_5;
    private readonly InputAction m_PlayerAction_MousePosition;
    public struct PlayerActionActions
    {
        private @InputController m_Wrapper;
        public PlayerActionActions(@InputController wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_PlayerAction_Move;
        public InputAction @Dash => m_Wrapper.m_PlayerAction_Dash;
        public InputAction @Skill_1 => m_Wrapper.m_PlayerAction_Skill_1;
        public InputAction @Skill_2 => m_Wrapper.m_PlayerAction_Skill_2;
        public InputAction @Skill_3 => m_Wrapper.m_PlayerAction_Skill_3;
        public InputAction @Skill_4 => m_Wrapper.m_PlayerAction_Skill_4;
        public InputAction @Skill_5 => m_Wrapper.m_PlayerAction_Skill_5;
        public InputAction @MousePosition => m_Wrapper.m_PlayerAction_MousePosition;
        public InputActionMap Get() { return m_Wrapper.m_PlayerAction; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActionActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActionActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
            @Skill_1.started += instance.OnSkill_1;
            @Skill_1.performed += instance.OnSkill_1;
            @Skill_1.canceled += instance.OnSkill_1;
            @Skill_2.started += instance.OnSkill_2;
            @Skill_2.performed += instance.OnSkill_2;
            @Skill_2.canceled += instance.OnSkill_2;
            @Skill_3.started += instance.OnSkill_3;
            @Skill_3.performed += instance.OnSkill_3;
            @Skill_3.canceled += instance.OnSkill_3;
            @Skill_4.started += instance.OnSkill_4;
            @Skill_4.performed += instance.OnSkill_4;
            @Skill_4.canceled += instance.OnSkill_4;
            @Skill_5.started += instance.OnSkill_5;
            @Skill_5.performed += instance.OnSkill_5;
            @Skill_5.canceled += instance.OnSkill_5;
            @MousePosition.started += instance.OnMousePosition;
            @MousePosition.performed += instance.OnMousePosition;
            @MousePosition.canceled += instance.OnMousePosition;
        }

        private void UnregisterCallbacks(IPlayerActionActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
            @Skill_1.started -= instance.OnSkill_1;
            @Skill_1.performed -= instance.OnSkill_1;
            @Skill_1.canceled -= instance.OnSkill_1;
            @Skill_2.started -= instance.OnSkill_2;
            @Skill_2.performed -= instance.OnSkill_2;
            @Skill_2.canceled -= instance.OnSkill_2;
            @Skill_3.started -= instance.OnSkill_3;
            @Skill_3.performed -= instance.OnSkill_3;
            @Skill_3.canceled -= instance.OnSkill_3;
            @Skill_4.started -= instance.OnSkill_4;
            @Skill_4.performed -= instance.OnSkill_4;
            @Skill_4.canceled -= instance.OnSkill_4;
            @Skill_5.started -= instance.OnSkill_5;
            @Skill_5.performed -= instance.OnSkill_5;
            @Skill_5.canceled -= instance.OnSkill_5;
            @MousePosition.started -= instance.OnMousePosition;
            @MousePosition.performed -= instance.OnMousePosition;
            @MousePosition.canceled -= instance.OnMousePosition;
        }

        public void RemoveCallbacks(IPlayerActionActions instance)
        {
            if (m_Wrapper.m_PlayerActionActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActionActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActionActions @PlayerAction => new PlayerActionActions(this);
    public interface IPlayerActionActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnSkill_1(InputAction.CallbackContext context);
        void OnSkill_2(InputAction.CallbackContext context);
        void OnSkill_3(InputAction.CallbackContext context);
        void OnSkill_4(InputAction.CallbackContext context);
        void OnSkill_5(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
    }
}
